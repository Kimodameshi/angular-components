@use 'sass:meta';
@use 'sass:map';

@use '../core/styles/typography/typography-utils' as *;


@mixin kbq-navbar-theme($theme) {
    $background: map.get($theme, background);

    $navbar: map.get(map.get($theme, components), navbar);
    $navbar-item: map.get(map.get($theme, components), navbar-item);

    .kbq-navbar,
    .kbq-vertical-navbar .kbq-vertical-navbar__container {
        background-color: map.get($navbar, background);
    }

    .kbq-navbar-brand.kbq-hovered:not(.kbq-collapsed) {
        background-color: map.get($navbar-item, state-hover);
    }

    .kbq-navbar-brand.kbq-vertical.kbq-collapsed {
        & .kbq-navbar-logo:hover {
            background-color: map.get($navbar-item, state-hover);
        }
    }

    .kbq-navbar-title {
        color: map.get($navbar-item, color);
    }

    .kbq-navbar-item,
    .kbq-navbar-brand,
    .kbq-navbar-toggle {
        color: map.get($navbar-item, color);

        &.kbq-horizontal, &.kbq-vertical {
            & > .kbq-icon {
                color: map.get($navbar-item, icon-color);
            }
        }

        & .kbq-icon.kbq-navbar-item__arrow-icon {
            color: map.get($navbar-item, color);
        }

        &.kbq-active {
            background: map.get($navbar-item, state-selected);
        }

        &:hover:not(.kbq-navbar-item_has-nested, .kbq-navbar-item_form-field) {
            cursor: pointer;

            & .kbq-navbar-item__overlay {
                background-color: map.get($navbar-item, state-hover);
            }
        }

        &:active:not(.kbq-navbar-item_has-nested, .kbq-navbar-item_form-field) {
            & .kbq-navbar-item__overlay {
                background: map.get($navbar-item, state-active);
            }
        }

        &.kbq-disabled {
            pointer-events: none;
            cursor: default;

            .kbq-navbar-item__title,
            .kbq-icon {
                opacity: map.get($navbar-item, state-disabled-opacity);
            }
        }
    }

    .kbq-navbar-focusable-item {
        outline: none;

        /* stylelint-disable no-descending-specificity */
        &.cdk-keyboard-focused .kbq-navbar-item__overlay {
            box-shadow:
                inset 0 0 0 2px map.get(map.get($theme, states), focused-color),
                inset 0 0 0 3px map.get($background, bg);
        }
        /* stylelint-enable no-descending-specificity */
    }

    .kbq-navbar-divider {
        background-color: map.get($navbar, divider-background);
    }
}

button {
    &.kbq-navbar-item,
    &.kbq-navbar-brand,
    &.kbq-navbar-toggle {
        background: transparent;
        border: none;
    }
}

@mixin kbq-navbar-typography($config) {
    $tokens: map.get($config, tokens);

    .kbq-navbar-title {
        @include kbq-typography-level-to-styles($config, map.get($tokens, navbar-font-title));
    }

    .kbq-navbar-subtitle {
        @include kbq-typography-level-to-styles($config, extra-small-text);
    }

    .kbq-navbar-brand {
        .kbq-navbar-title {
            @include kbq-typography-level-to-styles($config, map.get($tokens, navbar-brand-font-title));

            &.kbq-navbar-title_small {
                @include kbq-typography-level-to-styles($config, subheading);

                white-space: unset;
            }
        }
    }
}
